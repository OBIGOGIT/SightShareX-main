plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.6'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'war'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.obigo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	asciidoctorExtensions
}

repositories {
	mavenCentral()
}

ext {
	snippetsDir = file('build/generated-snippets')
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation group: 'org.json', name: 'json', version: '20220320'

	// https://mvnrepository.com/artifact/org.jcodec/jcodec
	implementation group: 'org.jcodec', name: 'jcodec', version: '0.2.5'

	implementation group: 'org.jcodec', name: 'jcodec-javase', version: '0.2.5'

	// https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple
	implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1'
	implementation group: 'org.json', name: 'json', version: '20220320'
	implementation group: 'com.google.code.gson', name: 'gson', version: '2.7'
	implementation 'com.vladmihalcea:hibernate-types-52:2.9.11'
//	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'javax.servlet:javax.servlet-api:4.0.1'

	implementation 'javax.servlet.jsp:javax.servlet.jsp-api:2.3.3'
	// JSP setting
	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
	implementation 'javax.servlet:jstl'

	implementation 'commons-codec:commons-codec:1.16.0'

	//mqtt
	implementation 'org.springframework.boot:spring-boot-starter-integration'
	implementation 'org.springframework.integration:spring-integration-mqtt'


	//webSokcet
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation group: 'org.webjars', name: 'sockjs-client', version: '1.1.1'
	implementation group: 'org.webjars', name: 'stomp-websocket', version: '2.3.3'


	implementation 'io.micrometer:micrometer-registry-prometheus'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-taglibs'

	asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

	// MyBatis setting
//	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.0'
//	implementation 'org.mybatis:mybatis-typehandlers-jsr310:1.0.2'
}

tasks.named('test') {
	useJUnitPlatform()
}

test {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

//asciidoctor.doFirst {
//    delete file('src/main/resources/static/docs') // -- 2 --
//}


asciidoctor {
	configurations 'asciidoctorExtensions'
	inputs.dir snippetsDir
	dependsOn test
}

bootWar {
	dependsOn asciidoctor
	copy {
		from "${asciidoctor.outputDir}"            // /html5를 사용하지 않는다!
		into 'src/main/resources/static/docs'    // /static/docs로 복사!
	}
}
